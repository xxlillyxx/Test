git commit -m '提交訊息'
 # 提交

git stash 
 # 暫存目前修改並回覆未修改狀態

git stash apply 
 # 將暫存的修改套用至目前分支

git pull --rebase
 # 1.把本地 repo. 從上次 pull 之後的變更暫存起來 
 # 2.回復到上次 pull 時的情況 
 # 3.套用遠端的變更 
 # 4.最後再套用剛暫存下來的本地變更

git merge branch  
 # 將branch合併至目前所在分支

git push (如remote端無本地端分支會自動建立)
 # 將本地端repo推送至remote端

git remote set-url <remote name> <newurl> 
 # 修改remote端Url

git checkout -b <branch> 
 # 從目前分支切換並新建分支

git checkout --track -b 1540 origin/1540
 # 建立本地端本支 並追蹤遠端分支 (適用已有遠端分支的情況)

git branch -d 分支 
 # 刪除分支


git push -u
 # 將本地端新分支推送至遠端

git revert <commit sha1>
 # 回覆到某commit修改的狀態

git cherry-pick 'commit'
 # 將某commit 合併到目前分支
http://blog.winwu.today/2013/04/git-cherry-pick.html

